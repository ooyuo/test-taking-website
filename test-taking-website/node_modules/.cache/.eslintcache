[{"C:\\Users\\doyoun\\test-taking-website\\test-taking-website\\src\\index.js":"1","C:\\Users\\doyoun\\test-taking-website\\test-taking-website\\src\\App.js":"2","C:\\Users\\doyoun\\test-taking-website\\test-taking-website\\src\\Router.js":"3","C:\\Users\\doyoun\\test-taking-website\\test-taking-website\\src\\routes\\TestResult.js":"4","C:\\Users\\doyoun\\test-taking-website\\test-taking-website\\src\\routes\\TestDisplay.js":"5","C:\\Users\\doyoun\\test-taking-website-1\\test-taking-website\\src\\routes\\TestDisplay.js":"6","C:\\Users\\doyoun\\Desktop\\test-taking-website-2\\test-taking-website\\src\\index.js":"7","C:\\Users\\doyoun\\Desktop\\test-taking-website-2\\test-taking-website\\src\\App.js":"8","C:\\Users\\doyoun\\Desktop\\test-taking-website-2\\test-taking-website\\src\\Router.js":"9","C:\\Users\\doyoun\\Desktop\\test-taking-website-2\\test-taking-website\\src\\routes\\TestDisplay.js":"10","C:\\Users\\doyoun\\Desktop\\test-taking-website-2\\test-taking-website\\src\\routes\\TestResult.js":"11"},{"size":255,"mtime":1665131795584,"results":"12","hashOfConfig":"13"},{"size":218,"mtime":1665090753941,"results":"14","hashOfConfig":"13"},{"size":533,"mtime":1665134384335,"results":"15","hashOfConfig":"13"},{"size":845,"mtime":1665129924997,"results":"16","hashOfConfig":"13"},{"size":4369,"mtime":1665134378631,"results":"17","hashOfConfig":"13"},{"size":6267,"mtime":1665890091787,"results":"18","hashOfConfig":"19"},{"size":265,"mtime":1665891235575,"results":"20","hashOfConfig":"21"},{"size":232,"mtime":1665891235506,"results":"22","hashOfConfig":"21"},{"size":533,"mtime":1665891235508,"results":"23","hashOfConfig":"21"},{"size":6347,"mtime":1665891664518,"results":"24","hashOfConfig":"21"},{"size":845,"mtime":1665891235582,"results":"25","hashOfConfig":"21"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1l5ii8z",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},"nbergr",{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lkghr1",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\doyoun\\test-taking-website\\test-taking-website\\src\\index.js",[],[],[],"C:\\Users\\doyoun\\test-taking-website\\test-taking-website\\src\\App.js",[],[],"C:\\Users\\doyoun\\test-taking-website\\test-taking-website\\src\\Router.js",[],[],"C:\\Users\\doyoun\\test-taking-website\\test-taking-website\\src\\routes\\TestResult.js",["63","64","65","66"],[],"import \"../css/TestDisplay.css\";\r\nimport \"../css/TestResult.css\";\r\nimport { useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nfunction TestResult() {\r\n  const text = useLocation();\r\n  const answer = text.state.answer;\r\n\r\n  console.log(answer + \"dd\");\r\n  return (\r\n    <>\r\n      {answer == \"concat\" ? (\r\n        <div className=\"wrapper-img\">\r\n          <img\r\n            src={require(\"../icons/successfully-done.gif\")}\r\n            width=\"500\"\r\n            height=\"500\"\r\n          />\r\n          <div className=\"correct\">Correct !</div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"wrapper-img\">\r\n          <img src={require(\"../icons/fail.gif\")} width=\"500\" height=\"500\" />\r\n          <div className=\"incorrect\">{`Incorrect :(`}</div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TestResult;\r\n","C:\\Users\\doyoun\\test-taking-website\\test-taking-website\\src\\routes\\TestDisplay.js",["67","68","69","70","71","72","73","74"],[],"import \"../css/TestDisplay.css\";\r\nimport styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction TestDisplay() {\r\n  let [text, setText] = useState(\"______\");\r\n  const changeText = (e) => {\r\n    text = e.target.value;\r\n    setText(text);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <header>\r\n          <div>\r\n            <img src={require(\"../icons/test.png\")} width=\"40\" height=\"40\" />\r\n          </div>\r\n\r\n          <div className=\"qustion-btn\">\r\n            <Link\r\n              className=\"link\"\r\n              to={{\r\n                pathname: `/test-taking-website/result/`,\r\n                state: { answer: text },\r\n              }}\r\n            >\r\n              <span>SUBMIT</span>\r\n              <img\r\n                src={require(\"../icons/right-arrow.gif\")}\r\n                width=\"30\"\r\n                height=\"30\"\r\n              />\r\n            </Link>\r\n          </div>\r\n        </header>\r\n      </div>\r\n      <main>\r\n        <div className=\"container\">\r\n          <div className=\"main--question_number\">\r\n            Question - Merge multiple arrays together\r\n          </div>\r\n          <div className=\"main--question_text\">Choose appropriate options.</div>\r\n          <div className=\"question\">\r\n            <span className=\"block--blue\">const </span>fruits = [\r\n            <span className=\"block--green\">\r\n              'Apple', 'Banana', 'Strawberry'\r\n            </span>\r\n            ];\r\n            <br />\r\n            <span className=\"block--blue\">const</span> moreFruits = [\r\n            <span className=\"block--green\">'Mango', 'Cherry'</span>];\r\n            <br />\r\n            <span className=\"block--blue\">const </span>combinedFruits = fruits.\r\n            <span className=\"block--red\">\r\n              <span className=\"yourAnswer\" value={text}>\r\n                {text}\r\n              </span>\r\n            </span>\r\n            (moreFruits);\r\n            <br />\r\n            console.<span className=\"block--red\">log</span>(combinedFruits);\r\n            <br />\r\n            <span className=\"block--grey\">\r\n              // [\"Apple\", \"Banana\", \"Strawberry\", \"Mango\", \"Cherry\"]\r\n            </span>\r\n            <br />\r\n            <br />\r\n            <span className=\"block--grey\">\r\n              // The 'fruits' array remains unchanged.\r\n            </span>\r\n            <br />\r\n            console.<span className=\"block--red\">log</span>(fruits);\r\n            <br />\r\n            <span className=\"block--grey\">\r\n              // The 'fruits' array remains unchanged.\r\n            </span>\r\n            <br /> <br />\r\n            <span className=\"block--grey\">\r\n              // The 'moreFruits' array also remains unchanged.\r\n            </span>\r\n            <br />\r\n            console.<span className=\"block--red\">log</span>(moreFruits);\r\n            <br />\r\n            <span className=\"block--grey\">// [\"Mango\", \"Cherry\"]</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"question--item\">\r\n            <button className=\"item\" value=\"push\" onClick={changeText}>\r\n              push\r\n            </button>\r\n            <button className=\"item\" value=\"shift\" onClick={changeText}>\r\n              shift\r\n            </button>\r\n            <button className=\"item\" value=\"concat\" onClick={changeText}>\r\n              concat\r\n            </button>\r\n            <button className=\"item\" value=\"map\" onClick={changeText}>\r\n              map\r\n            </button>\r\n            <button className=\"item\" value=\"reduce\" onClick={changeText}>\r\n              reduce\r\n            </button>\r\n            <button className=\"item\" value=\"slice\" onClick={changeText}>\r\n              slice\r\n            </button>\r\n            <button className=\"item\" value=\"splice\" onClick={changeText}>\r\n              splice\r\n            </button>\r\n            <button className=\"item\" value=\"sort\" onClick={changeText}>\r\n              sort\r\n            </button>\r\n            <button className=\"item\" value=\"every\" onClick={changeText}>\r\n              every\r\n            </button>\r\n            <button className=\"item\" value=\"flatMap\" onClick={changeText}>\r\n              flatMap\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </main>\r\n      <footer></footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TestDisplay;\r\n","C:\\Users\\doyoun\\test-taking-website-1\\test-taking-website\\src\\routes\\TestDisplay.js",["75","76","77","78","79","80","81","82","83","84","85"],[],"import \"../css/TestDisplay.css\";\r\nimport \"../css/responsive.css\";\r\nimport styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Modal from \"react-modal\";\r\n\r\nfunction TestDisplay() {\r\n  const Modal = styled.div`\r\n    position: absolute;\r\n    top: 40px;\r\n    left: 40px;\r\n    right: 40px;\r\n    bottom: 40px;\r\n  `;\r\n\r\n  let [text, setText] = useState(\"______\");\r\n  const changeText = (e) => {\r\n    text = e.target.value;\r\n    setText(text);\r\n  };\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <header>\r\n          <div>\r\n            <img src={require(\"../icons/test.png\")} width=\"40\" height=\"40\" />\r\n          </div>\r\n\r\n          <div className=\"qustion-btn\">\r\n            {/* <Link\r\n              className=\"link\"\r\n              to={{\r\n                pathname: `/test-taking-website/result`,\r\n                state: { answer: text },\r\n              }}\r\n            > */}\r\n            <button onClick={() => setModalIsOpen(true)} className=\"btn-submit\">\r\n              <span>Submit</span>\r\n              <img\r\n                src={require(\"../icons/right-arrow.gif\")}\r\n                width=\"30\"\r\n                height=\"30\"\r\n              />\r\n            </button>\r\n            {modalIsOpen ? (\r\n              <Modal\r\n                isOpen={modalIsOpen}\r\n                onRequestClose={() => setModalIsOpen(false)}\r\n              >\r\n                <div className=\"modal-body\">\r\n                  <div className=\"container\">\r\n                    <div className=\"cookiesContent\" id=\"cookiesPopup\">\r\n                      <button\r\n                        className=\"close\"\r\n                        onClick={() => setModalIsOpen(false)}\r\n                      >\r\n                        ✖\r\n                      </button>\r\n                      {text === \"concat\" ? (\r\n                        <img\r\n                          src={require(\"../icons/successfully-done.gif\")}\r\n                          className=\"image-result\"\r\n                        />\r\n                      ) : (\r\n                        <img\r\n                          src={require(\"../icons/fail.gif\")}\r\n                          className=\"image-result\"\r\n                        />\r\n                      )}\r\n\r\n                      <p className=\"modal-text\">\r\n                        {text === \"concat\" ? \"correct\" : \"incorrect\"}\r\n                      </p>\r\n                      <button\r\n                        className=\"accept\"\r\n                        onClick={() => setModalIsOpen(false)}\r\n                      >\r\n                        Close\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Modal>\r\n            ) : null}\r\n\r\n            {/* </Link> */}\r\n          </div>\r\n        </header>\r\n      </div>\r\n      <main>\r\n        <div className=\"container\">\r\n          <div className=\"main--question_number\">\r\n            Question - Merge multiple arrays together\r\n          </div>\r\n          <div className=\"main--question_text\">Choose appropriate options.</div>\r\n          <div className=\"question\">\r\n            <span className=\"block--blue\">const </span>fruits = [\r\n            <span className=\"block--green\">\r\n              'Apple', 'Banana', 'Strawberry'\r\n            </span>\r\n            ];\r\n            <br />\r\n            <span className=\"block--blue\">const</span> moreFruits = [\r\n            <span className=\"block--green\">'Mango', 'Cherry'</span>];\r\n            <br />\r\n            <span className=\"block--blue\">const </span>combinedFruits = fruits.\r\n            <span className=\"block--red\">\r\n              <span className=\"yourAnswer\" value={text}>\r\n                {text}\r\n              </span>\r\n            </span>\r\n            (moreFruits);\r\n            <br />\r\n            console.<span className=\"block--red\">log</span>(combinedFruits);\r\n            <br />\r\n            <span className=\"block--grey\">\r\n              // [\"Apple\", \"Banana\", \"Strawberry\", \"Mango\", \"Cherry\"]\r\n            </span>\r\n            <br />\r\n            <br />\r\n            <span className=\"block--grey\">\r\n              // The 'fruits' array remains unchanged.\r\n            </span>\r\n            <br />\r\n            console.<span className=\"block--red\">log</span>(fruits);\r\n            <br />\r\n            <span className=\"block--grey\">\r\n              // The 'fruits' array remains unchanged.\r\n            </span>\r\n            <br /> <br />\r\n            <span className=\"block--grey\">\r\n              // The 'moreFruits' array also remains unchanged.\r\n            </span>\r\n            <br />\r\n            console.<span className=\"block--red\">log</span>(moreFruits);\r\n            <br />\r\n            <span className=\"block--grey\">// [\"Mango\", \"Cherry\"]</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"question--item\">\r\n            <button className=\"item\" value=\"push\" onClick={changeText}>\r\n              push\r\n            </button>\r\n            <button className=\"item\" value=\"shift\" onClick={changeText}>\r\n              shift\r\n            </button>\r\n            <button className=\"item\" value=\"concat\" onClick={changeText}>\r\n              concat\r\n            </button>\r\n            <button className=\"item\" value=\"map\" onClick={changeText}>\r\n              map\r\n            </button>\r\n            <button className=\"item\" value=\"reduce\" onClick={changeText}>\r\n              reduce\r\n            </button>\r\n            <button className=\"item\" value=\"slice\" onClick={changeText}>\r\n              slice\r\n            </button>\r\n            <button className=\"item\" value=\"splice\" onClick={changeText}>\r\n              splice\r\n            </button>\r\n            <button className=\"item\" value=\"sort\" onClick={changeText}>\r\n              sort\r\n            </button>\r\n            <button className=\"item\" value=\"every\" onClick={changeText}>\r\n              every\r\n            </button>\r\n            <button className=\"item\" value=\"flatMap\" onClick={changeText}>\r\n              flatMap\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </main>\r\n      <footer></footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TestDisplay;\r\n","C:\\Users\\doyoun\\Desktop\\test-taking-website-2\\test-taking-website\\src\\index.js",[],[],"C:\\Users\\doyoun\\Desktop\\test-taking-website-2\\test-taking-website\\src\\App.js",[],[],"C:\\Users\\doyoun\\Desktop\\test-taking-website-2\\test-taking-website\\src\\Router.js",[],[],"C:\\Users\\doyoun\\Desktop\\test-taking-website-2\\test-taking-website\\src\\routes\\TestDisplay.js",["86","87","88","89","90","91","92","93","94","95","96","97","98"],[],"C:\\Users\\doyoun\\Desktop\\test-taking-website-2\\test-taking-website\\src\\routes\\TestResult.js",["99","100","101","102"],[],{"ruleId":"103","severity":1,"message":"104","line":3,"column":10,"nodeType":"105","messageId":"106","endLine":3,"endColumn":18},{"ruleId":"107","severity":1,"message":"108","line":13,"column":15,"nodeType":"109","messageId":"110","endLine":13,"endColumn":17},{"ruleId":"111","severity":1,"message":"112","line":15,"column":11,"nodeType":"113","endLine":19,"endColumn":13},{"ruleId":"111","severity":1,"message":"112","line":24,"column":11,"nodeType":"113","endLine":24,"endColumn":78},{"ruleId":"103","severity":1,"message":"114","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":14},{"ruleId":"111","severity":1,"message":"112","line":18,"column":13,"nodeType":"113","endLine":18,"endColumn":78},{"ruleId":"111","severity":1,"message":"112","line":30,"column":15,"nodeType":"113","endLine":34,"endColumn":17},{"ruleId":"115","severity":1,"message":"116","line":65,"column":43,"nodeType":"117","messageId":"118","endLine":67,"endColumn":13},{"ruleId":"115","severity":1,"message":"116","line":70,"column":43,"nodeType":"117","messageId":"118","endLine":72,"endColumn":13},{"ruleId":"115","severity":1,"message":"116","line":76,"column":43,"nodeType":"117","messageId":"118","endLine":78,"endColumn":13},{"ruleId":"115","severity":1,"message":"116","line":80,"column":43,"nodeType":"117","messageId":"118","endLine":82,"endColumn":13},{"ruleId":"115","severity":1,"message":"116","line":86,"column":43,"nodeType":"117","messageId":"118","endLine":86,"endColumn":65},{"ruleId":"103","severity":1,"message":"119","line":5,"column":10,"nodeType":"105","messageId":"106","endLine":5,"endColumn":14},{"ruleId":"103","severity":1,"message":"120","line":6,"column":8,"nodeType":"105","messageId":"106","endLine":6,"endColumn":13},{"ruleId":"111","severity":1,"message":"112","line":29,"column":13,"nodeType":"113","endLine":29,"endColumn":78},{"ruleId":"111","severity":1,"message":"112","line":42,"column":15,"nodeType":"113","endLine":46,"endColumn":17},{"ruleId":"111","severity":1,"message":"112","line":63,"column":25,"nodeType":"113","endLine":66,"endColumn":27},{"ruleId":"111","severity":1,"message":"112","line":68,"column":25,"nodeType":"113","endLine":71,"endColumn":27},{"ruleId":"115","severity":1,"message":"116","line":119,"column":43,"nodeType":"117","messageId":"118","endLine":121,"endColumn":13},{"ruleId":"115","severity":1,"message":"116","line":124,"column":43,"nodeType":"117","messageId":"118","endLine":126,"endColumn":13},{"ruleId":"115","severity":1,"message":"116","line":130,"column":43,"nodeType":"117","messageId":"118","endLine":132,"endColumn":13},{"ruleId":"115","severity":1,"message":"116","line":134,"column":43,"nodeType":"117","messageId":"118","endLine":136,"endColumn":13},{"ruleId":"115","severity":1,"message":"116","line":140,"column":43,"nodeType":"117","messageId":"118","endLine":140,"endColumn":65},{"ruleId":"103","severity":1,"message":"119","line":5,"column":10,"nodeType":"105","messageId":"106","endLine":5,"endColumn":14},{"ruleId":"103","severity":1,"message":"120","line":6,"column":8,"nodeType":"105","messageId":"106","endLine":6,"endColumn":13},{"ruleId":"111","severity":1,"message":"112","line":29,"column":13,"nodeType":"113","endLine":29,"endColumn":78},{"ruleId":"111","severity":1,"message":"112","line":42,"column":15,"nodeType":"113","endLine":46,"endColumn":17},{"ruleId":"111","severity":1,"message":"112","line":60,"column":25,"nodeType":"113","endLine":63,"endColumn":27},{"ruleId":"107","severity":1,"message":"108","line":64,"column":32,"nodeType":"109","messageId":"110","endLine":64,"endColumn":34},{"ruleId":"111","severity":1,"message":"112","line":65,"column":25,"nodeType":"113","endLine":68,"endColumn":27},{"ruleId":"107","severity":1,"message":"108","line":74,"column":34,"nodeType":"109","messageId":"110","endLine":74,"endColumn":36},{"ruleId":"115","severity":1,"message":"116","line":120,"column":43,"nodeType":"117","messageId":"118","endLine":122,"endColumn":13},{"ruleId":"115","severity":1,"message":"116","line":125,"column":43,"nodeType":"117","messageId":"118","endLine":127,"endColumn":13},{"ruleId":"115","severity":1,"message":"116","line":131,"column":43,"nodeType":"117","messageId":"118","endLine":133,"endColumn":13},{"ruleId":"115","severity":1,"message":"116","line":135,"column":43,"nodeType":"117","messageId":"118","endLine":137,"endColumn":13},{"ruleId":"115","severity":1,"message":"116","line":141,"column":43,"nodeType":"117","messageId":"118","endLine":141,"endColumn":65},{"ruleId":"103","severity":1,"message":"104","line":3,"column":10,"nodeType":"105","messageId":"106","endLine":3,"endColumn":18},{"ruleId":"107","severity":1,"message":"108","line":13,"column":15,"nodeType":"109","messageId":"110","endLine":13,"endColumn":17},{"ruleId":"111","severity":1,"message":"112","line":15,"column":11,"nodeType":"113","endLine":19,"endColumn":13},{"ruleId":"111","severity":1,"message":"112","line":24,"column":11,"nodeType":"113","endLine":24,"endColumn":78},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'styled' is defined but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","JSXText","putCommentInBraces","'Link' is defined but never used.","'Modal' is defined but never used."]